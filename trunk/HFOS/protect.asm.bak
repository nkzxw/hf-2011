; ==========================================
; protect.asm
; 编译方法：nasm protect.asm -o protect.bin
; ==========================================

%include "pm.inc"

org 07c00h
	jmp LABEL_BEGIN
	
[SECTION	.gdt]
;GDT
;												段基址	段界限	属性
LABEL_GDT: 	Descriptor	0,			0, 0
LABEL_DESC_CODE32: Descriptor	0, SegCode32Len - 1, DA_C + DA_32
LABEL_DESC_VIDEO: Descriptor	0B8000h, 0ffffh, DA_DRW
;GDT OVER

GdtLen 	equ $ - LABEL_GDT  	;GDT长度
GdtPtr	dw	GdtLen - 1		;GDT界限
				dd	0		;GDT基地址

; GDT 选择子				
SelectCode32 	equ LABEL_DESC_CODE32 - LABEL_GDT
SelectVideo32	equ 	LABEL_DESC_VIDEO	- LABEL_GDT
; END of [SECTION .gdt]

[SECTION .s16]
[BITS 16]
LABEL_BEGIN:
	mov ax, cs
	mov ds, ax
	mov es, ax
	mov ss, ax
	mov sp, 0100h
	
	; 初始化 32 位代码段描述符
	xor eax, eax
	mov ax, cs
	shl eax, 4
	add eax, LABEL_SEG_CODE32
	mov word [LABEL_DESC_CODE32 + 2], ax
	shr eax, 16
	mov	byte [LABEL_DESC_CODE32 + 4], al
	mov byte [LABEL_DESC_CODE32 + 7], ah
	
	; 为加载 GDTR 作准备	
	xor eax, eax
	mov ax, ds
	shl eax, 4
	add eax, LABEL_GDT
	mov dword [GdtPtr + 2], eax
	
	; 加载 GDTR
	lgdt [GdtPtr]	
	
	; 关中断
	cli

	; 打开地址线A20
	in al, 92h
	or al, 00000010h
	out 92h, al
	
	; 准备切换到保护模式	
	mov eax, cr0
	or eax, 1
	mov cr0, eax
	
	; 真正进入保护模式
	jmp dword SelectCode32:0
	; END of [SECTION .s16]	
	
[SECTION .s32]; 32 位代码段. 由实模式跳入.
[BITS	32]

LABEL_SEG_CODE32:
	mov ax, SelectCodeVideo
	mov gs, ax
	
	mov edi, (80 * 11 + 79) * 2
	mov ah, 0Ch
	mov al, 'P'
	mov [gs:edi], ax
	
	jmp $
				
SegCode32Len	equ $ - LABEL_SEG_CODE32
; END of [SECTION .s32]

